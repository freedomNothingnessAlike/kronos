# .github/workflows/rust-check.yml

# Workflow name
name: Rust Code Quality and Tests

on:

  push:
    branches: [ "dev" ]

  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: '0 * * * *'

  # Allows manual triggering from the GitHub Actions UI.
  workflow_dispatch:

jobs:
  # Checks formatting, lints, and runs tests on the standard toolchain.
  quality_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Check formatting
        run: cargo fmt --check
      - name: Run Clippy
        run: cargo clippy -- -D warnings
      - name: Run unit tests
        run: cargo test

  # Runs tests with the AddressSanitizer to find memory-related bugs.
  # This depends on the basic checks passing first.
  sanitizer_checks:
    runs-on: ubuntu-latest
    needs: [quality_checks]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain (nightly)
        uses: dtolnay/rust-toolchain@nightly
      - name: Run tests with AddressSanitizer (ASan)
        env:
          RUSTFLAGS: "-Z sanitizer=address"
          RUSTDOCFLAGS: "-Z sanitizer=address"
        # The target must be gnu for ASan to work.
        run: cargo test --target x86_64-unknown-linux-gnu
